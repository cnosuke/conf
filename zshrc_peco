# https://gist.github.com/azu/8171054

# {{{
# cd 履歴を記録
typeset -U chpwd_functions
CD_HISTORY_FILE=${HOME}/.cd_history_file # cd 履歴の記録先ファイル
function chpwd_record_history() {
    echo $PWD >> ${CD_HISTORY_FILE}
}
chpwd_functions=($chpwd_functions chpwd_record_history)

# percol を使って cd 履歴の中からディレクトリを選択
# 過去の訪問回数が多いほど選択候補の上に来る
function percol_get_destination_from_history() {
    sort ${CD_HISTORY_FILE} | uniq -c | sort -r | \
        sed -e 's/^[ ]*[0-9]*[ ]*//' | \
        sed -e s"/^${HOME//\//\\/}/~/" | \
        peco | xargs echo
}

# percol を使って cd 履歴の中からディレクトリを選択し cd するウィジェット
function percol_cd_history() {
    local destination=$(percol_get_destination_from_history)
    [ -n $destination ] && cd ${destination/#\~/${HOME}}
    zle reset-prompt
}
zle -N percol_cd_history

# percol を使って cd 履歴の中からディレクトリを選択し，現在のカーソル位置に挿入するウィジェット
function percol_insert_history() {
    local destination=$(percol_get_destination_from_history)
    if [ $? -eq 0 ]; then
        local new_left="${LBUFFER} ${destination} "
        BUFFER=${new_left}${RBUFFER}
        CURSOR=${#new_left}
    fi
    zle reset-prompt
}
zle -N percol_insert_history
# }}}

# C-x ; でディレクトリに cd
# C-x i でディレクトリを挿入
bindkey '^j' percol_cd_history
bindkey '^xi' percol_insert_history

# http://k0kubun.hatenablog.com/entry/2014/07/06/033336
alias -g B='`git branch | peco | sed -e "s/^\*[ ]*//g"`'


function peco-select-history() {
  typeset tac
  if which tac > /dev/null; then
    tac=tac
  else
    tac='tail -r'
  fi
  BUFFER=$(fc -l -n 1 | eval $tac | peco --query "$LBUFFER")
  CURSOR=$#BUFFER
  zle -R -c
}
zle -N peco-select-history
bindkey '^r' peco-select-history

alias -g P="| peco"
alias pfind="ignore-git-find . -type f -follow| peco | ruby -e 'print STDIN.read.chomp'"
alias pls='echo "Use ^="'

function peco-less() {
  local selected=$(ignore-git-find . -follow | peco --query "$LBUFFER")
  if [ -n "$selected" ]; then
    if [ -d $selected ]; then
      BUFFER="cd ${selected}"
    else
      BUFFER="less ${selected}"
    fi
    zle accept-line
  fi
  zle clear-screen
}
zle -N peco-less
bindkey '^\' peco-less

function peco-src () {
  local selected_dir=$(ghq list | peco --query "$LBUFFER")
  if [ -n "$selected_dir" ]; then
    BUFFER="cd $GOPATH/src/${selected_dir}"
    zle accept-line
  fi
  zle clear-screen
}
zle -N peco-src
bindkey '^]' peco-src

function cwlogs () {
  local log_group=$(aws logs describe-log-groups | jq -r '.logGroups[] | .logGroupName' | peco)
  if [ -n "$log_group" ]; then
    local log_streams=$(aws logs describe-log-streams --log-group-name $log_group | jq -r '.logStreams[] | .logStreamName' | peco)
    if [ -n "$log_streams" ]; then
      local cmd="aws \
        logs get-log-events \
          --no-start-from-head \
          --log-group-name $log_group \
          --log-stream-name $log_streams \
        | jq -r '.events[] | .message ' \
        | jq -r '.log' \
        | sed -e '/^$/d' \
        |\less -M -R "

        sh -c "$cmd" && echo $cmd
    fi
  fi
}

function  open-cwlogs () {
  local log_group=$(aws logs describe-log-groups | jq -r '.logGroups[] | .logGroupName' | peco --query "$1" --select-1)

  if [ -n "$log_group" ]; then
    open "https://ap-northeast-1.console.aws.amazon.com/cloudwatch/home?region=ap-northeast-1#logEventViewer:group=$log_group"
  else
    open "https://ap-northeast-1.console.aws.amazon.com/cloudwatch/home?region=ap-northeast-1#logs:"
  fi
}
