eval "$(~/.cpad/bin/cpad init)"

alias awsproxy="autossh -M 50000 -f -N awsproxy.vpc"
alias awsproxy_redshift="autossh -M 60544 -f -N -L5444:cookpad-dwh-401.cbzwjkf60uat.ap-northeast-1.redshift.amazonaws.com:5439 redshift-workbench-001.vpc.ap-northeast-1.compute.internal"

function staging-deploy () {
  REMOTE='me' BRANCH=`git rev-parse --abbrev-ref HEAD` NAME=$1 bundle exec cap staging deploy IM SAY
  check_staging $1
}

gmage() {
  curl https://g.cookpad.com/uploads/gyazo -XPOST -F imagedata=@$1 -F key=7d07f771005cbc16dec169ad34c42758 | xargs open
}

export HOMEBREW_GITHUB_API_TOKEN=ffbf0c56fec3dc6642e8c26cc966256c3a8720a9

export IM_KAYAC_SIG='cvQ8VKyQpPr3yvgXxkWVzxnaT'

function check_staging () {
  for i in `seq 1 3`; curl -I https://$1.staging.cookpad.com/ >& /dev/null
  open https://$1.staging.cookpad.com/
}

function backport() {
  if [[ $# == 1 ]]; then
    local issue=`echo $1 | xargs ruby -e 'puts %r!(\d+)$!.match(ARGV.first)[0]'`;
    if [[ $issue == '' ]]; then
      echo -e "\e[33mInvalid URL.\e[m";
      return;
    fi
    
    echo "====================";
    echo "Issue id is $issue";
    echo "====================";
    git co master;
    git pull;
    local commit=`git log --oneline | \grep "Merge pull request #$issue" | awk '{print $1}'`;
    if [[ $commit == '' ]]; then
      echo -e "\e[33mMerge commit isn't found. Please confirm the issue was merged.\e[m";
      return;
    fi
 
    echo "===================="; 
    echo "Commit id is $commit";
    echo "====================";

    git co rails41;
    git pull origin rails41;
    git cherry-pick -x -m1 $commit;

    echo "====================";
    echo -e "\e[42mCheery-picked $commit \e[m";
    echo "====================";
  else
    echo "====================";
    echo -e '\e[33mPlease give a issue URL that you want to cheery-pick.\e[m';
    echo "====================";
  fi
}

function preq {
  git show $(perl -ne 'print if ($seen{$_} .= @ARGV) =~ /10$/' <(git rev-list --ancestry-path $1..master) <(git rev-list --first-parent $1..master) | tail -1) | \grep 'pull request' | ruby -ne 'id = $_.scan(/#\d+/).first.sub("#", ""); remote = `git config --get remote.origin.url`.scan(/\@((\w|\.|\-|\_|\:|\/)+)\.git/).flatten.first.gsub(":","/"); `open https://#{remote}/pull/#{id}`'
}

alias ckpdc='be ruby my_own_script/c.rb'
